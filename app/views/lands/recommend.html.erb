<script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>
<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>
<script src="//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js"></script>
    <script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/infobox/1.1.9/src/infobox_packed.js' type='text/javascript'></script>
    <!--script src="//cdnjs.cloudflare.com/ajax/libs/gmaps4rails/2.1.2/gmaps4rails.js"></script-->


<!-- includes ends -->
<script type="text/javascript">
var __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __hasProp = {}.hasOwnProperty;

this.CustomMarker = (function(_super) {
  __extends(CustomMarker, _super);

  function CustomMarker() {
    return CustomMarker.__super__.constructor.apply(this, arguments);
  }

  CustomMarker.prototype.create_infowindow = function() {
    return new (this.primitives().infowindow)({
      content: this.build_infowindow_content()
    });
  };

  CustomMarker.prototype.build_infowindow_content = function() {
    return _.template(this.template())({
      name: this.args.name
    });
  };

  CustomMarker.prototype.template = function() {
  	if(this.args.score != undefined) {
  		return "Area:" + this.args.name + "\n" + "Score: "+ this.args.score + "\n" + "Rank: "+ this.args.rank;	
  	}
  	return "Place:" + this.args.name + "\n";
  };

  return CustomMarker;

})(Gmaps.Google.Builders.Marker);

// ---
// generated by coffee-script 1.9.0


	var locations;
	var land_details_arr;
	var score_arr;
	var nearby_places_arr;
	var handler;
	var markers = [];

</script>
<div class="row">
	<div class="col-lg-8" id = "map_canvas"></div>
</div>
<div class="row">
	<div class="col-lg-8">
		<div style='width: 800px;'>
		  <div id="map_holder" style=' height: 400px;'></div>
		</div>
	</div>
	<div class="col-lg-4">
		<div id='sidebar_container'>
			<a href=# onclick=populate_locations(land_details_arr)>Resetmap</a>
		</div>
	</div>
	<span id="dummy_span">clickdummy</span>
</div>

<script type="text/javascript">
$(document).ready(function(){
	$.get("<%= lands_get_data_from_api_path %>", function(data) {
		data = data.replace(/"latitude":/g, '"lat":');
		data = data.replace(/"longitude":/g, '"lng":');
		data = data.replace(/"areaName":/g, '"name":');
		data = JSON.parse(data)
		locations = data.recommendedLands
		land_details_arr = []
		score_arr = []
		nearby_places_arr = []
		_.each(locations, function(recommended_land, i){
			recommended_land.landDetails["score"] = recommended_land.score
			recommended_land.landDetails["rank"] = i+1
			land_details_arr.push(recommended_land.landDetails)
			score_arr.push(recommended_land.score)
			nearby_places_arr.push({
				"hotels": _.union(recommended_land.hotelDetailsList, {opacity: 0.5}),
				"theaters": recommended_land.theaterDetailsList
			})
		})

		init_map();
		populate_locations(land_details_arr)
	})
	
	// do_example(locations[0])
})
// top 5 positions are marked on map
function createSidebarLi(json, i){
	var s = "<li><a class=show_location><img height = 50 width=50 src=/assets/real_estate_filler.jpg />" + json.name + "</a><br><a class=show_nearby_places data-id="+i+">Show nearby places</a></li>";
	return s;
};

function bindLiToMarker($li, marker){
  $li.find("a.show_location").on('click', function(){
    handler.getMap().setZoom(14);
    // marker.setMap(handler.getMap()); //because clusterer removes map property from marker
    // marker.panTo();
    // google.maps.event.trigger(marker.getServiceObject(), 'click');
  })
  $li.find("a.show_nearby_places").on('click', function(){
    // handler.getMap().setZoom(14);
    // marker.setMap(handler.getMap()); //because clusterer removes map property from marker
    // marker.panTo();
    // google.maps.event.trigger(marker.getServiceObject(), 'click');
    var id = $(this).data("id")
    showNearbyPlaces(id)
  })
};

function clearMarkers(){
	debugger
	for (var i = 0; i < markers.length; i++) {
		debugger
    	markers[i].setMap(null);
  	}
	markers = []
}

function createSidebar(json_array){
  _.each(json_array, function(json, i){
    var $li = $( createSidebarLi(json, i) );
    $li.appendTo('#sidebar_container');
    // json.marker = handler.addMarker(json)
    bindLiToMarker($li, json.marker);
  });
};

function init_map(){
	handler = Gmaps.build('Google', { builders: { Marker: CustomMarker} });
	handler.buildMap({ internal: {id: 'map_holder'}}, function(){
		clearMarkers()
		markers = handler.addMarkers(land_details_arr)
		handler.bounds.extendWith(markers);
		handler.fitMapToBounds();
	});
	createSidebar(land_details_arr)
}

function populate_locations (json_array) {
	
	

	// _.each(json_array, function(json, index){
	// 	// json.map = map
	// 	var marker = new google.maps.Marker(json);
	// 	json.marker = marker;
	// });



}

function showNearbyPlaces (id) {
	// nearby_places = location["nearby_places"]
	var nearby_places = nearby_places_arr[id]
	
	clearMarkers();
	
	// handler.buildMap({ internal: {id: 'map_holder'}}, function(){
		var hotels_collection = nearby_places["hotels"]
		var theaters_collection = nearby_places["theaters"]
		markers = handler.addMarkers(hotels_collection)
		markers.push(handler.addMarkers(theaters_collection));
		// handler.bounds.extendWith(markers);
		// handler.fitMapToBounds();

	// });


}
</script>


<div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
  <%#=
  @lands = []
  5.times { |i|
    @lands << Land.new({id: i, name: "item#{i}"})
  }
  render @lands
  %>
</div>